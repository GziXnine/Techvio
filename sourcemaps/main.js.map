{"version":3,"sources":["main.ts","timer.ts"],"names":["number_1","start_1","header","document","querySelector","img","currentPage","window","location","pathname","stats","includes","classList","add","src","addEventListener","scrollY","remove","allServes","flag","serves","querySelectorAll","offsetTop","forEach","serve","style","width","dataset","prog","getElementById","startCount","numElement","target_1","count_1","increment_1","interval_1","targetValue","goal","parseInt","Math","ceil","setInterval","clearInterval","innerText","toString","console","warn","num","toTop","btns","top","btnArr","getActiveIndex","findIndex","btnSelector","_a","contains","daysSpan","btn","index","e","preventDefault","currIndex","btnElement","selector","hoursSpan","minutesSpan","secondsSpan","currDate","Date","myComingBday","getFullYear","myComingBdayLastChar","slice","countDownDate","concat","timer","dateDiff","getTime","days","floor","hours","minutes","seconds","innerHTML"],"mappings":"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","file":"../src/ts/main.js","sourcesContent":["/** @format */\n\n// !Sticky header\nconst header = document.querySelector(\"header\") as HTMLElement;\nconst img = document.querySelector(\"header img\") as HTMLImageElement;\nconst currentPage = window.location.pathname;\n\nif (currentPage.includes(\"/landing2.html\")) {\n  header.classList.add(\"dark\");\n  img.src = \"assets/images/logo-black.png\";\n}\n\nwindow.addEventListener(\"scroll\", () => {\n  if (window.scrollY >= 50) {\n    header.classList.add(\"scroll\");\n    img.src = \"assets/images/logo-black.png\";\n  } else {\n    header.classList.remove(\"scroll\");\n    if (!currentPage.includes(\"/landing2.html\"))\n      img.src = \"assets/images/logo.png\";\n  }\n});\n\n// !Wait for the DOM to be fully loaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // !Skills Progress Bar Fill When Appears\n  const serves = document.querySelector(\".about-company\") as HTMLDivElement;\n\n  if (!serves) {\n    return;\n  }\n\n  const allServes = document.querySelectorAll(\n    \".analyt .line span\"\n  ) as NodeListOf<HTMLSpanElement>;\n  let flag: boolean = true;\n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= serves.offsetTop - 250 && flag) {\n      allServes.forEach((serve: any) => {\n        serve.style.width = serve.dataset.prog;\n      });\n      flag = false;\n    }\n  });\n});\n\n// ! Start Count Of Stats\nconst stats = document.getElementById(\"subscribe\") as HTMLElement;\n\nif (!stats) {\n  // TODO console.warn(\"The #subscribe section does not exist on this page.\");\n} else {\n  const number = document.querySelectorAll(\n    \".subscribe .timer .number\"\n  ) as NodeListOf<HTMLSpanElement>;\n  let start = false;\n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= stats.offsetTop - 450) {\n      if (!start) {\n        number.forEach((num) => startCount(num));\n      }\n      start = true;\n    }\n  });\n}\n\nfunction startCount(numElement: HTMLSpanElement) {\n  const targetValue = numElement.dataset.goal;\n\n  if (targetValue) {\n    const target = parseInt(targetValue, 10);\n\n    let count = 0;\n    const increment = Math.ceil(target / 100);\n\n    const interval = setInterval(() => {\n      count += increment;\n      if (count >= target) {\n        count = target;\n        clearInterval(interval);\n      }\n      numElement.innerText = count.toString();\n    }, 150);\n  } else {\n    console.warn(\"data-target attribute is missing on the number element.\");\n  }\n}\n\n// ! Making Scroll To Top Button Visible\nconst toTop = document.getElementById(\"top\") as HTMLSpanElement;\nwindow.addEventListener(\"scroll\", () => {\n  window.scrollY >= 1000\n    ? (toTop.style.top = \"93vh\")\n    : (toTop.style.top = \"-60px\");\n});\n\n//! Select all buttons and define the button array\nlet btns = document.querySelectorAll(\n  \".blog-side .buttonrl\"\n) as NodeListOf<HTMLButtonElement>;\nlet btnArr: string[] = [\"#button4\", \"#button3\", \"#button2\", \"#button1\"];\n\nconst getActiveIndex = (): number => {\n  return btnArr.findIndex((btnSelector) =>\n    document.querySelector(btnSelector)?.classList.contains(\"active\")\n  );\n};\n\nbtns.forEach((btn, index) => {\n  btn.addEventListener(\"click\", (e) => {\n    e.preventDefault();\n    let currIndex = getActiveIndex();\n\n    if (index === 0 && currIndex < 3) {\n      currIndex += 1;\n    } else if (index !== 0 && currIndex > 0) {\n      currIndex -= 1;\n    }\n\n    btnArr.forEach((btnSelector) => {\n      document.querySelector(btnSelector)?.classList.remove(\"active\");\n    });\n    document.querySelector(btnArr[currIndex])?.classList.add(\"active\");\n  });\n});\n\nbtnArr.forEach((btnSelector) => {\n  let btnElement = document.querySelector(btnSelector);\n\n  if (btnElement) {\n    btnElement.addEventListener(\"click\", () => {\n      btnArr.forEach((selector) => {\n        document.querySelector(selector)?.classList.remove(\"active\");\n      });\n      btnElement.classList.add(\"active\");\n    });\n  }\n});\n","/** @format */\n\n// ! Events Section Counter To Count My New Birthday Time\nconst daysSpan = document.querySelector<HTMLSpanElement>(\n  \".coming-soon .bubbles .bubble span#days\"\n);\nconst hoursSpan = document.querySelector<HTMLSpanElement>(\n  \".coming-soon .bubbles .bubble span#hours\"\n);\nconst minutesSpan = document.querySelector<HTMLSpanElement>(\n  \".coming-soon .bubbles .bubble span#minutes\"\n);\nconst secondsSpan = document.querySelector<HTMLSpanElement>(\n  \".coming-soon .bubbles .bubble span#seconds\"\n);\nconst currDate = new Date();\n\nlet myComingBday = currDate.getFullYear() - 2003;\nlet myComingBdayLastChar = myComingBday.toString().slice(-1);\nlet countDownDate = new Date(`Dec 3, ${currDate.getFullYear()} 00:00:01`);\n\nconst timer = setInterval(() => {\n  let dateDiff = countDownDate.getTime() - new Date().getTime();\n\n  if (dateDiff <= 0) {\n    countDownDate = new Date(`Aug 4, ${currDate.getFullYear() + 1} 00:00:01`);\n  }\n\n  let days = Math.floor(dateDiff / (1000 * 60 * 60 * 24));\n  let hours = Math.floor((dateDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let minutes = Math.floor((dateDiff % (1000 * 60 * 60)) / (1000 * 60));\n  let seconds = Math.floor((dateDiff % (1000 * 60)) / 1000);\n\n  if (daysSpan) daysSpan.innerHTML = days < 10 ? `0${days}` : days.toString();\n  if (hoursSpan)\n    hoursSpan.innerHTML = hours < 10 ? `0${hours}` : hours.toString();\n  if (minutesSpan)\n    minutesSpan.innerHTML = minutes < 10 ? `0${minutes}` : minutes.toString();\n  if (secondsSpan)\n    secondsSpan.innerHTML = seconds < 10 ? `0${seconds}` : seconds.toString();\n}, 1000);\n"]}